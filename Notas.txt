Temas puntuales de la sección
Esta sección es sumamente importante, porque explicamos cosas fundamentales para el desarrollo de aplicaciones de JavaScript moderno.

Puntualmente veremos:

¿Qué son bundlers?

¿Qué es Webpack y TurboPack?

¿Qué es Vite?

¿Por qué queremos utilizar esas herramientas?



Y luego, nos moveremos a realizar trabajo con Vite en la aplicación de BlackJack.


ES6 es el estandar como tal hasta el momento.

Bundlers son empaquetadores, nos permiten desarrollar aplicaciones de javascript en modulos, combinarlo ejecutarlo lista para poderlos usar.
Lo que hace practicmante es tomar todos los archivos pasas por el bundler y pasar a tener un el progrmar para pdouccion.
Nos ofrecen formas modernas de trabjar.
Webpack es el estadnar que casi todos lo usamaos por muchos años.
Vite es una herramienta que tecnicmatne nos muestra que webpack es muy lento.
Cambia modulos en caliente.

tURBOPACK esta escrito en rust, nexts es un frameworkd de react, es otro brundler que no se ocupa mucho todavia esta ahi y ocupa por debajo next.

Para crear un proyecto como tal ponemos el npm create vite.Vite nos deja trabjar con algunos sabore so algun framwork ppodemos usar el vanilla o rea ejeuctorar

El npm install descarga la despendicias
hasy dos dependecies y devdependeices, dev depdnecies son las dependeicas para consturi el codigo y el dependices nos sirve para produccion commo tal 
{
  "name": "vite-app",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "devDependencies": {
    "vite": "^5.4.1"
  }
}

digamos si colcoamos el npm run hace que se vaya al scripts como tal luego de eso colcamos el dev para qeu corra el dev. como tal y asi el vite build y los tors(explica mejor esto.)
Tenemos el nodemoduels y package json signifca que nuestar aplicaocn es de node.

El build lo que hace es coger el codigo que temos npm run build y transforma el codigo apra que se pueda ocpar como tal en culiqeur nabegaor como tal 
netlify nos sirve para despegar aplicacoines qeu no requeiren de codigo de backend como tal, es para depsegar aplciaocnes

Los errores pueden salir con import 
cuando hacemos un build, assets con recursos estaticos, y colcoamso esto en public para que aqui agarre eso. si no hacemos nada de ipmrt peude ir enopublcik
cuando ponemos el public un arhcivo no es necesrio refecnaiar esta ruta